# name: "myproject"
version: "3"

services:
  frontend:
    container_name: front_${PNAME}
    build:
      context: .
      dockerfile: .devcontainer/frontend/Dockerfile
      args:
        LOCALUID: ${LOCALUID}
        LOCALUNAME: ${LOCALUNAME}
        LOCALGID: ${LOCALGID}
        LOCALGNAME: ${LOCALGNAME}
        APP_PATH: ${APP_PATH}
    volumes:
      - ./frontend:${APP_PATH}
    # command: yarn dev #OK
    # command: dumb-init yarn run #OK
    # command: dumb-init node /root/container.js #NG
    command: /bin/sh
    tty: true
    ports:
      - "3001:3000"

  backend:
    container_name: back_${PNAME}
    build:
      context: .
      dockerfile: .devcontainer/backend/Dockerfile
      args: # Dockerfileに引き継ぐ変数
        LOCALUID: ${LOCALUID}
        LOCALUNAME: ${LOCALUNAME}
        LOCALGID: ${LOCALGID}
        LOCALGNAME: ${LOCALGNAME}
        APP_PATH: ${APP_PATH}
    volumes:
      # - type: bind
      #   source: ./backend
      #   target: /app:rw
      - ./backend:${APP_PATH}:rw
    environment: # コンテナ内に引き継ぐ変数
      TZ: Asia/Tokyo
      RAILS_ENV: development
    # command: rails server -e
    command: /bin/sh
    ports:
      - "3002:3000"
    depends_on:
      - db
    tty: true # 追記

  db:
    image: postgres:14.3-alpine
    container_name: postgres_${PNAME}
    environment:
      - TZ=Asia/Tokyo
      - PGTZ=Asia/Tokyo
      - POSTGRES_PASSWORD=password
    volumes:
      # - type: bind
      #   source: ./db/data
      #   target: /var/lib/postgresql/data 
      - ./db/data:/var/lib/postgresql/data:rw
      # memo:https://nishinatoshiharu.com/docker-volume-tutorial/
    ports:
      - "5433:5432"

  adminer:
    image: adminer:latest
    container_name: adminer_${PNAME}
    ports:
      - 8081:8080
    # restart: always
    depends_on:
      - db
    environment:
      - ADMINER_SERVER=db
      - ADMINER_DRIVER=pgsql
      - ADMINER_DB=${DB_NAME:-db}
      - ADMINER_USERNAME=${DB_USER:-postgres}
      - ADMINER_PASSWORD=${DB_PASSWORD:-postgres}
      - ADMINER_NAME=ADMINER for PostgreSQL DB
    